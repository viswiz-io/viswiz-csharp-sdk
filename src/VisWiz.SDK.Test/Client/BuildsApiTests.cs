/* 
 * VisWiz.io API Documentation
 *
 * This SDK allows you to query and create new projects, builds or images within the VisWiz service. 
 *
 * OpenAPI spec version: 1.1.0
 * Contact: support@viswiz.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using VisWiz.SDK.Client;
using VisWiz.SDK.Client;
using VisWiz.SDK.Model;

namespace VisWiz.SDK.Test
{
    /// <summary>
    ///  Class for testing BuildsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class BuildsApiTests
    {
        private BuildsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new BuildsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of BuildsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' BuildsApi
            //Assert.IsInstanceOfType(typeof(BuildsApi), instance, "instance is a BuildsApi");
        }

        
        /// <summary>
        /// Test CreateBuild
        /// </summary>
        [Test]
        public void CreateBuildTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectID = null;
            //Body2 body = null;
            //var response = instance.CreateBuild(projectID, body);
            //Assert.IsInstanceOf<Build> (response, "response is Build");
        }
        
        /// <summary>
        /// Test FinishBuild
        /// </summary>
        [Test]
        public void FinishBuildTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string buildID = null;
            //instance.FinishBuild(buildID);
            
        }
        
        /// <summary>
        /// Test GetBuildResults
        /// </summary>
        [Test]
        public void GetBuildResultsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string buildID = null;
            //var response = instance.GetBuildResults(buildID);
            //Assert.IsInstanceOf<BuildResults> (response, "response is BuildResults");
        }
        
        /// <summary>
        /// Test GetBuilds
        /// </summary>
        [Test]
        public void GetBuildsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectID = null;
            //var response = instance.GetBuilds(projectID);
            //Assert.IsInstanceOf<Builds> (response, "response is Builds");
        }
        
    }

}
